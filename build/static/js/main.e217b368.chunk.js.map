{"version":3,"sources":["Components/Input/Input.tsx","store/user/userAction.ts","Components/SignInUp/SignInUp.tsx","dispatchers/userDispatcher.ts","App.tsx","store/store.ts","store/user/userReducer.ts","index.tsx"],"names":["Input","inputType","inputId","changeHandler","err","htmlFor","className","type","name","id","onChange","e","SET_INITIAL_STATE","REGISTER_NEW_USER","SignInUp","dispatch","useDispatch","useState","signIn","setSignIn","activated","inputs","setInputs","form","setForm","setErr","target","value","formValidator","formObject","email","test","push","password","useEffect","axios","get","then","resp","console","log","catch","onSubmit","preventDefault","newUserData","user","validationResult","length","a","post","res","data","inState","actionTypes","payload","filter","input","map","includes","nameInputIndex","findIndex","nameInput","splice","prevForm","App","store","createStore","state","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e217b368.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\n\ninterface IinputProps {\n    inputType: string;\n    inputId: string;\n    changeHandler: (e: ChangeEvent<HTMLInputElement>) => void;\n    err?: boolean;\n}\n\nconst Input = ({\n    inputType,\n    inputId,\n    changeHandler,\n    err = false,\n}: IinputProps) => {\n    return (\n        <label htmlFor={inputId}>\n            {`${inputId}: `}\n            <input\n                className={`${\n                    err ? 'border-red-400' : 'border-black'\n                } border-2 `}\n                type={inputType}\n                name={inputId}\n                id={inputId}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    changeHandler(e)\n                }\n            />\n        </label>\n    );\n};\n\nexport default Input;\n","export const SET_INITIAL_STATE = 'SET_INITIAL_STATE';\nexport const REGISTER_NEW_USER = 'REGISTER_NEW_USER';\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport Input from '../Input/Input';\nimport { useDispatch } from 'react-redux';\nimport { registerUser, signInUser } from '../../dispatchers/userDispatcher';\nimport axios from 'axios';\n\ninterface IFormObject {\n    email?: string;\n    name?: string;\n    password?: string;\n}\n\ntype IValRes = string[];\n\nconst SignInUp = () => {\n    const dispatch = useDispatch();\n    const [signIn, setSignIn] = useState(false);\n    const [inputs, setInputs] = useState([\n        { inputId: 'email', inputType: 'email', activated: true },\n        { inputId: 'name', inputType: 'text', activated: true },\n        { inputId: 'password', inputType: 'password', activated: true },\n    ]);\n    const [form, setForm] = useState<IFormObject>({});\n    const [err, setErr] = useState<IValRes>([]);\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const signInChangeHandler = () => {\n        setSignIn(!signIn);\n        const nameInputIndex = inputs.findIndex(\n            (input) => input.inputId === 'name'\n        )!;\n        const nameInput = inputs[nameInputIndex];\n        nameInput.activated = !nameInput.activated;\n        inputs.splice(nameInputIndex, 1, nameInput);\n        setInputs([...inputs]);\n        const prevForm: IFormObject = form;\n        if (prevForm.name) {\n            delete prevForm['name'];\n        }\n        setForm(prevForm);\n    };\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        setErr([]);\n        const validationResult: IValRes = formValidator(form);\n        console.log(validationResult);\n        if (validationResult.length > 0) {\n            setErr(validationResult);\n            return;\n        }\n        console.log(form);\n        signIn ? dispatch(signInUser(form)) : dispatch(registerUser(form));\n    };\n\n    const formValidator = (formObject: IFormObject) => {\n        const err: string[] = [];\n\n        if (!formObject.email) {\n            err.push('email');\n        } else {\n            const testRes = /^[^\\s@]+@[^\\s@]+$/.test(formObject.email);\n            if (!testRes) {\n                err.push('email');\n            }\n        }\n        if (!formObject.password) {\n            err.push('password');\n        }\n        if (!signIn && !formObject.name) {\n            err.push('name');\n        }\n\n        return err;\n    };\n\n    useEffect(() => {\n        axios\n            .get('http://127.0.0.1:3001/')\n            .then((resp: any) => console.log(resp))\n            .catch((e) => console.log(e));\n    }, []);\n\n    return (\n        <div className=\"w-screen h-screen flex justify-center items-center\">\n            <form\n                className=\"flex flex-col justify-between items-center h-3/4 w-3/4\"\n                onSubmit={submitHandler}\n            >\n                {inputs\n                    .filter((input) => input.activated)\n                    .map((input) => (\n                        <Input\n                            key={input.inputId}\n                            inputType={input.inputType}\n                            inputId={input.inputId}\n                            changeHandler={changeHandler}\n                            err={err.includes(input.inputId)}\n                        />\n                    ))}\n\n                <button type=\"submit\">Sign Up</button>\n                <Input\n                    inputType={'checkbox'}\n                    inputId={'signIn'}\n                    changeHandler={signInChangeHandler}\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default SignInUp;\n","import * as actionTypes from '../store/user/userAction';\nimport { Dispatch } from 'redux';\nimport { UserStateAction, IUser } from '../store/user/userTypes';\nimport axios from 'axios';\n\nconst signUpUrl: string = 'http://127.0.0.1:3001/api/signup/';\nconst signInUrl: string = 'http://127.0.0.1:3001/api/signin';\n\nexport const initializeUserState = () => {\n    return async (dispatch: Dispatch<UserStateAction>) => {\n        const inState: IUser = await getAll();\n        dispatch({\n            type: actionTypes.SET_INITIAL_STATE,\n            payload: { user: inState },\n        });\n    };\n};\n\nexport const registerUser = (newUserData: any) => {\n    return async (dispatch: Dispatch<UserStateAction>) => {\n        const inState: IUser = await axios\n            .post(signUpUrl, newUserData)\n            .then((res) => res.data.user)\n            .catch((e) => console.log(e));\n        console.log(inState);\n        dispatch({\n            type: actionTypes.REGISTER_NEW_USER,\n            payload: { user: inState },\n        });\n    };\n};\n\nexport const signInUser = (user: any) => {\n    return async (dispatch: Dispatch<UserStateAction>) => {\n        const inState: IUser = await axios\n            .post(signInUrl, user)\n            .then((res) => res.data)\n            .catch((e) => console.log(e));\n        console.log(inState);\n        dispatch({\n            type: actionTypes.REGISTER_NEW_USER,\n            payload: { user: inState },\n        });\n    };\n};\n\nexport function getAll() {\n    return new Promise<IUser>((resolve, reject) => {\n        setTimeout(() => {\n            resolve({\n                _id: 'gewgwegwesd624k626',\n                email: 'wet',\n                name: 'ff',\n                spendings: ['r2er2', 'ewrwett'],\n            });\n        }, 2000);\n    });\n}\n","import React from 'react';\nimport SignInUp from './Components/SignInUp/SignInUp';\n\nconst App = () => {\n    return (\n        <>\n            <SignInUp />\n        </>\n    );\n};\n\nexport default App;\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport { userReducer } from './user/userReducer';\nimport thunk from 'redux-thunk';\nimport { UserStateAction, IUserInitialState } from './user/userTypes';\n\nexport const store: Store<IUserInitialState, UserStateAction> = createStore(\n    userReducer,\n    applyMiddleware(thunk)\n);\n","import { UserStateAction, IUser, IUserInitialState } from './userTypes';\nimport * as actionTypes from './userAction';\n\nconst initialState: IUser = {\n    _id: 'gewgwegwesd624k626',\n    email: 'wet',\n    name: 'ff',\n    spendings: ['r2er2', 'ewrwett'],\n};\nexport const userReducer = (\n    state: IUserInitialState = {},\n    action: UserStateAction\n) => {\n    switch (action.type) {\n        case actionTypes.SET_INITIAL_STATE:\n            return action.payload.user;\n        case actionTypes.REGISTER_NEW_USER:\n            return action.payload.user;\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}